#pragma once
#include "engine.h"

class IDXGIFactory4;
class IDXGISwapChain3;

class Device
{
	friend class SBEngine;

private:
	// SBEngine이외에서 Device 생성을 막는다.
	Device();

	bool Init();

	ComPtr<ID3D12Device>		device;			
	ComPtr<IDXGIFactory>		factory;	// 어뎁터 가져오는용
	ComPtr<IDXGISwapChain3>		swapChain;

	bool MSAA4xEnable = { false };
	UINT m_nMsaa4xQualityLevels = { 0 };
	static const UINT m_nSwapChainBuffers = { 2 };
	UINT m_nSwapChainBufferIndex;

	ID3D12Resource* m_ppd3dRenderTargetBuffers[m_nSwapChainBuffers];
	ID3D12DescriptorHeap* m_pd3dRtvDescriptorHeap;
	UINT m_nRtvDescriptorIncrementSize;
	// 렌더타겟, 서술자힙 포인터. 렌더 타겟 서술자 크기

	ID3D12Resource* m_pd3dDepthStencilBuffer;
	ID3D12DescriptorHeap* m_pd3dDsvDescriptorHeap;
	UINT m_nDsvDescriptorIncrementSize;
	// 깊이 스텐실 버퍼, 서술자 힙 포인터. 깊이 스텐실 서술자 크기

	ID3D12CommandQueue* m_pd3dCommandQueue;
	ID3D12CommandAllocator* m_pd3dCommandAllocator;
	ID3D12GraphicsCommandList* m_pd3dCommandList;
	//명령 큐, 명령 할당자, 명령 리스트 포인터

	ID3D12PipelineState* m_pd3dPipelineState;
	// 그래픽 파이프라인 상태 객체 포인터

	ID3D12Fence* m_pd3dFence;
	UINT64 m_nFenceValue;
	HANDLE m_hFenceEvent;
	// 펜스 포인터, 펜스 값, 이벤트 핸들

	D3D12_VIEWPORT m_d3dViewport;
	D3D12_RECT m_d3dScissorRect;
	//뷰포트와 시저 사각형

};